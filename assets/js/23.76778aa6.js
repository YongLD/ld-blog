(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{522:function(s,t,e){"use strict";e.r(t);var a=e(22),o=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"仿真平台-webots-vs-gazebo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#仿真平台-webots-vs-gazebo"}},[s._v("#")]),s._v(" 仿真平台 Webots VS Gazebo")]),s._v(" "),e("h3",{attrs:{id:"安装须知"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装须知"}},[s._v("#")]),s._v(" 安装须知")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("Webots")]),s._v("："),e("a",{attrs:{href:"http://www.cyberbotics.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("webots下载安装"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("strong",[s._v("Gazebo")]),s._v("："),e("code",[s._v("ROS2 foxy安装Gazebo11.0")])])]),s._v(" "),e("p",[e("a",{attrs:{href:"https://classic.gazebosim.org/tutorials?cat=install",target:"_blank",rel:"noopener noreferrer"}},[s._v("gazebo"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gazebo下载")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://raw.githubusercontent.com/ignition-tooling/release-tools/master/one-line-installations/gazebo.sh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#安装")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" gazebo.sh\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("a",{attrs:{href:"http://gazebosim.org/tutorials?tut=ros2_installing&cat=connect_ros",target:"_blank",rel:"noopener noreferrer"}},[s._v("gazebo_ros_pkg"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gazebo_ros_pkg安装")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ros-foxy-gazebo-ros-pkgs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("a",{attrs:{href:"https://classic.gazebosim.org/tutorials?tut=ros2_installing&cat=connect_ros",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gazebo测试")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装依赖")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ros-foxy-ros-core ros-foxy-geometry2\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加载gazebo差速转向测试demo")]),s._v("\ngazebo --verbose /opt/ros/foxy/share/gazebo_plugins/worlds/gazebo_ros_diff_drive_demo.world\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新终端运行")]),s._v("\nros2 topic pub /demo/cmd_demo geometry_msgs/Twist "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{linear: {x: 1.0}}'")]),s._v(" -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"基本信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本信息"}},[s._v("#")]),s._v(" 基本信息")]),s._v(" "),e("h4",{attrs:{id:"_1-物理引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-物理引擎"}},[s._v("#")]),s._v(" 1）物理引擎")]),s._v(" "),e("p",[s._v("物理引擎是仿真平台核心部分，如果没有物理引擎，"),e("code",[s._v("Webots")]),s._v("或者"),e("code",[s._v("Gazebo")]),s._v("都仅仅是个三维显示工具而已。")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("Gazebo")]),s._v("：支持ODE、Bullet、Simbody和DART，其默认引擎为ODE")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Webots")]),s._v("：基于改进的ODE")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("ODE")]),s._v("：开源物理引擎，全称Open Dynamics Engine，它是一款模拟刚体动力学的基于C/C++高性能库，功能稳定，常被用于计算机游戏和虚拟现实等技术上。")]),s._v(" "),e("li",[e("strong",[s._v("Bullet")]),s._v("：开源物理引擎，与AGEIA、Havok并称世界三大物理模拟引擎，由C++编写，也被广泛应用与游戏开发、电影制作中。")])])])]),s._v(" "),e("p",[e("em",[s._v("注：使用 Bullet 和 ODE 引擎时接触边界会进行碰撞计算，因此如果接触边界设置不当，会导致力传感的数据异常。")])]),s._v(" "),e("h4",{attrs:{id:"_2-支持平台"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-支持平台"}},[s._v("#")]),s._v(" 2）支持平台")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("Gazebo、Webots：")]),s._v(" "),e("code",[s._v("Windows、MacOS、Linux")]),s._v("全平台支持")])]),s._v(" "),e("h3",{attrs:{id:"建模"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建模"}},[s._v("#")]),s._v(" 建模")]),s._v(" "),e("h4",{attrs:{id:"_1-环境建模"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-环境建模"}},[s._v("#")]),s._v(" 1）环境建模")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("Gazebo：")]),s._v(" 环境文件为"),e("code",[s._v("*.world")]),s._v("，由XML来描述，官方提供了一些模型库，模型使用"),e("code",[s._v("*.sdf")]),s._v("描述，本质还是XML文件")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Webots：")]),s._v(" 环境文件为"),e("code",[s._v("*.wbt")]),s._v("，由VRML描述，软件同样集成了很多场景文件供用户选择")])])]),s._v(" "),e("p",[e("em",[s._v("Gazebo的"),e("code",[s._v("building editor")]),s._v("绝对神器，可以快速帮我们实现建筑物的结构建模，这是Webots所不具备的。")])]),s._v(" "),e("h4",{attrs:{id:"_2-机器人建模"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-机器人建模"}},[s._v("#")]),s._v(" 2）机器人建模")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("Gazebo：")]),s._v(" 机器人可在场景树下建模，但我们更习惯直接由XML来建模，常使用"),e("code",[s._v("urdf")]),s._v("、"),e("code",[s._v("xacro")]),s._v("描述，同样的，传感器的配置也在这些XML描述文件中完成。对于机器人关节的控制模式，需要通过在描述文件中配置插件来完成。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Webots：")]),s._v(" 单独的机器人模型格式为"),e("code",[s._v("*.wbo")]),s._v("，机器人建模方式有3种，可由"),e("code",[s._v("*.VRML")]),s._v("格式导入，也可由"),e("code",[s._v("urdf2webots")]),s._v("功能包进行转换（"),e("em",[s._v("需要配置python环境")]),s._v("）；集成了多款人形机器人和移动机器人，以及几款机械臂；关节的控制模式可由配置关节电机的API参数完成。")])])]),s._v(" "),e("h4",{attrs:{id:"_3-传感器建模"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-传感器建模"}},[s._v("#")]),s._v(" 3）传感器建模")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("Gazebo：")]),s._v(" 机传感器同样可以在描述文件中配置插件"),e("code",[s._v("*.so")]),s._v("完成，当然也可以自己编程实现某些传感功能。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Webots：")]),s._v(" 传感器类型相当丰富，有多种传感器可供用户选择，美中不足的是官方给定的力传感器只支持三轴力的检测而不支持三轴力矩的检测。")])])]),s._v(" "),e("h3",{attrs:{id:"编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编程"}},[s._v("#")]),s._v(" 编程")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("Gazebo：")]),s._v(" 最常用的是通过 "),e("em",[s._v("gazebo_ros_control")]),s._v(" 与 "),e("em",[s._v("ROS")]),s._v(" 建立通信，通信过程已经被封装好了，我们只需要配置文件就可以实现，而当单独使用时可使用 "),e("code",[s._v("C++")]),s._v(" 编写控制器插件来完成机器人的动作控制；Gazebo的数据输出是通过 "),e("code",[s._v("topic")]),s._v(" 来实现的，与MATLAB联合仿真时可利用 "),e("em",[s._v("ROS Toolbox")]),s._v(" 来实现，其本质还是通过 "),e("em",[s._v("ROS")]),s._v(" 框架作为中介来完成的；与 "),e("em",[s._v("ROS")]),s._v(" 联合仿真时，Gazebo自然是最佳选择。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("Webots：")]),s._v(" 支持"),e("code",[s._v("C/C++、Java、Python、MATLAB、ROS")]),s._v("以及"),e("code",[s._v("TCP/IP")]),s._v("完成控制器编程，不同的编程语言需要查阅不同的API，函数命名接近但风格不同，ROS通信是通过调用ROS API，然后将所使用的语言对应的控制器代码封装成"),e("code",[s._v("ROS topic")]),s._v("的形式来完成，自定义ROS控制器时建议使用Python，使用C/C++需要自行构建MakeFile文件，这对于新手而言绝对是个糟糕的选择；R2020版本已经大大简化了ROS的使用过程，当然也可借MATLAB为中介，通过ROS Toolbox来实现，这就显得过于繁琐了。如果与Simulink联合仿真，建议通过"),e("code",[s._v("To Workspace")]),s._v(" 和 "),e("code",[s._v("From Workspace")]),s._v("模块来实现。")])])]),s._v(" "),e("h3",{attrs:{id:"使用推荐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用推荐"}},[s._v("#")]),s._v(" 使用推荐")]),s._v(" "),e("ul",[e("li",[e("p",[e("strong",[s._v("移动机器人仿真：")]),s._v(" "),e("code",[s._v("Webots")]),s._v("是最强移动机器人仿真软件。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("机械臂抓取仿真：")]),s._v(" "),e("code",[s._v("Gazebo")]),s._v("是神器，上手难度大；"),e("code",[s._v("Webots")]),s._v("可实现一些简单的抓取；此外还有一些其他的仿真软件，诸如Simscape Multibody、Adams等软件，前者可以快速搭建Simulink仿真模型，后者一般机械臂的设计厂商使用较多。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("结合机器学习的仿真：")]),s._v(" "),e("code",[s._v("PyBullet、MuJoCo")]),s._v(",前者开源，后者商用。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("水下机器人：")]),s._v(" "),e("code",[s._v("Webots")]),s._v(",添加一个Fluid节点即可实现流体环境的设计。")])]),s._v(" "),e("li",[e("p",[e("strong",[s._v("自动驾驶：")]),s._v(" "),e("code",[s._v("Gazebo、Webots")]),s._v(",以及自动驾驶研究的开源仿真模拟器"),e("a",{attrs:{href:"https://www.carla.org.cn/#/",target:"_blank",rel:"noopener noreferrer"}},[s._v("CARLA"),e("OutboundLink")],1),s._v("。")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);