{"remainingRequest":"/media/wislab/Data/LDY/ldy2021/ldy-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/media/wislab/Data/LDY/ldy2021/ldy-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/wislab/Data/LDY/ldy2021/ldy-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/wislab/Data/LDY/ldy2021/ldy-blog/docs/.vuepress/components/IndexBigImg.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/wislab/Data/LDY/ldy2021/ldy-blog/docs/.vuepress/components/IndexBigImg.vue","mtime":1656324572746},{"path":"/media/wislab/Data/LDY/ldy2021/ldy-blog/node_modules/cache-loader/dist/cjs.js","mtime":1655796930728},{"path":"/media/wislab/Data/LDY/ldy2021/ldy-blog/node_modules/babel-loader/lib/index.js","mtime":1655796930714},{"path":"/media/wislab/Data/LDY/ldy2021/ldy-blog/node_modules/cache-loader/dist/cjs.js","mtime":1655796930728},{"path":"/media/wislab/Data/LDY/ldy2021/ldy-blog/node_modules/vue-loader/lib/index.js","mtime":1655796931151}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}